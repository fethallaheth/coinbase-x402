{"version":3,"sources":["../../src/index.ts"],"sourcesContent":["import { createAuthHeader, createCorrelationHeader } from \"x402/shared\";\nimport { FacilitatorConfig } from \"x402/types\";\nimport { CreateHeaders } from \"x402/verify\";\n\nconst COINBASE_FACILITATOR_BASE_URL = \"https://api.cdp.coinbase.com\";\nconst COINBASE_FACILITATOR_V2_ROUTE = \"/platform/v2/x402\";\n\n/**\n * Creates a CDP auth header for the facilitator service\n *\n * @param apiKeyId - The CDP API key ID\n * @param apiKeySecret - The CDP API key secret\n * @returns A function that returns the auth headers\n */\nexport function createCdpAuthHeaders(apiKeyId?: string, apiKeySecret?: string): CreateHeaders {\n  const requestHost = COINBASE_FACILITATOR_BASE_URL.replace(\"https://\", \"\");\n\n  return async () => {\n    apiKeyId = apiKeyId ?? process.env.CDP_API_KEY_ID;\n    apiKeySecret = apiKeySecret ?? process.env.CDP_API_KEY_SECRET;\n\n    if (!apiKeyId || !apiKeySecret) {\n      throw new Error(\n        \"Missing environment variables: CDP_API_KEY_ID and CDP_API_KEY_SECRET must be set when using default facilitator\",\n      );\n    }\n\n    return {\n      verify: {\n        Authorization: await createAuthHeader(\n          apiKeyId,\n          apiKeySecret,\n          requestHost,\n          `${COINBASE_FACILITATOR_V2_ROUTE}/verify`,\n        ),\n        \"Correlation-Context\": createCorrelationHeader(),\n      },\n      settle: {\n        Authorization: await createAuthHeader(\n          apiKeyId,\n          apiKeySecret,\n          requestHost,\n          `${COINBASE_FACILITATOR_V2_ROUTE}/settle`,\n        ),\n        \"Correlation-Context\": createCorrelationHeader(),\n      },\n    };\n  };\n}\n\n/**\n * Creates a facilitator config for the Coinbase X402 facilitator\n *\n * @param apiKeyId - The CDP API key ID\n * @param apiKeySecret - The CDP API key secret\n * @returns A facilitator config\n */\nexport function createFacilitatorConfig(\n  apiKeyId?: string,\n  apiKeySecret?: string,\n): FacilitatorConfig {\n  return {\n    url: `${COINBASE_FACILITATOR_BASE_URL}${COINBASE_FACILITATOR_V2_ROUTE}`,\n    createAuthHeaders: createCdpAuthHeaders(apiKeyId, apiKeySecret),\n  };\n}\n\nexport const facilitator = createFacilitatorConfig();\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA0D;AAI1D,IAAM,gCAAgC;AACtC,IAAM,gCAAgC;AAS/B,SAAS,qBAAqB,UAAmB,cAAsC;AAC5F,QAAM,cAAc,8BAA8B,QAAQ,YAAY,EAAE;AAExE,SAAO,YAAY;AACjB,eAAW,YAAY,QAAQ,IAAI;AACnC,mBAAe,gBAAgB,QAAQ,IAAI;AAE3C,QAAI,CAAC,YAAY,CAAC,cAAc;AAC9B,YAAM,IAAI;AAAA,QACR;AAAA,MACF;AAAA,IACF;AAEA,WAAO;AAAA,MACL,QAAQ;AAAA,QACN,eAAe,UAAM;AAAA,UACnB;AAAA,UACA;AAAA,UACA;AAAA,UACA,GAAG,6BAA6B;AAAA,QAClC;AAAA,QACA,2BAAuB,uCAAwB;AAAA,MACjD;AAAA,MACA,QAAQ;AAAA,QACN,eAAe,UAAM;AAAA,UACnB;AAAA,UACA;AAAA,UACA;AAAA,UACA,GAAG,6BAA6B;AAAA,QAClC;AAAA,QACA,2BAAuB,uCAAwB;AAAA,MACjD;AAAA,IACF;AAAA,EACF;AACF;AASO,SAAS,wBACd,UACA,cACmB;AACnB,SAAO;AAAA,IACL,KAAK,GAAG,6BAA6B,GAAG,6BAA6B;AAAA,IACrE,mBAAmB,qBAAqB,UAAU,YAAY;AAAA,EAChE;AACF;AAEO,IAAM,cAAc,wBAAwB;","names":[]}