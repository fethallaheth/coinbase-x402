"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  createCdpAuthHeaders: () => createCdpAuthHeaders,
  createFacilitatorConfig: () => createFacilitatorConfig,
  facilitator: () => facilitator
});
module.exports = __toCommonJS(src_exports);
var import_shared = require("x402/shared");
var COINBASE_FACILITATOR_BASE_URL = "https://api.cdp.coinbase.com";
var COINBASE_FACILITATOR_V2_ROUTE = "/platform/v2/x402";
function createCdpAuthHeaders(apiKeyId, apiKeySecret) {
  const requestHost = COINBASE_FACILITATOR_BASE_URL.replace("https://", "");
  return async () => {
    apiKeyId = apiKeyId ?? process.env.CDP_API_KEY_ID;
    apiKeySecret = apiKeySecret ?? process.env.CDP_API_KEY_SECRET;
    if (!apiKeyId || !apiKeySecret) {
      throw new Error(
        "Missing environment variables: CDP_API_KEY_ID and CDP_API_KEY_SECRET must be set when using default facilitator"
      );
    }
    return {
      verify: {
        Authorization: await (0, import_shared.createAuthHeader)(
          apiKeyId,
          apiKeySecret,
          requestHost,
          `${COINBASE_FACILITATOR_V2_ROUTE}/verify`
        ),
        "Correlation-Context": (0, import_shared.createCorrelationHeader)()
      },
      settle: {
        Authorization: await (0, import_shared.createAuthHeader)(
          apiKeyId,
          apiKeySecret,
          requestHost,
          `${COINBASE_FACILITATOR_V2_ROUTE}/settle`
        ),
        "Correlation-Context": (0, import_shared.createCorrelationHeader)()
      }
    };
  };
}
function createFacilitatorConfig(apiKeyId, apiKeySecret) {
  return {
    url: `${COINBASE_FACILITATOR_BASE_URL}${COINBASE_FACILITATOR_V2_ROUTE}`,
    createAuthHeaders: createCdpAuthHeaders(apiKeyId, apiKeySecret)
  };
}
var facilitator = createFacilitatorConfig();
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  createCdpAuthHeaders,
  createFacilitatorConfig,
  facilitator
});
//# sourceMappingURL=index.js.map