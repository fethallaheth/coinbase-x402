import { http } from "msw";
import type { ListSolanaAccounts200, SignSolanaMessage200, SignSolanaTransaction200, SolanaAccount } from "../coinbaseDeveloperPlatformAPIs.schemas.js";
export declare const getListSolanaAccountsResponseMock: () => ListSolanaAccounts200;
export declare const getCreateSolanaAccountResponseMock: (overrideResponse?: Partial<SolanaAccount>) => SolanaAccount;
export declare const getGetSolanaAccountResponseMock: (overrideResponse?: Partial<SolanaAccount>) => SolanaAccount;
export declare const getUpdateSolanaAccountResponseMock: (overrideResponse?: Partial<SolanaAccount>) => SolanaAccount;
export declare const getGetSolanaAccountByNameResponseMock: (overrideResponse?: Partial<SolanaAccount>) => SolanaAccount;
export declare const getSignSolanaTransactionResponseMock: (overrideResponse?: Partial<SignSolanaTransaction200>) => SignSolanaTransaction200;
export declare const getSignSolanaMessageResponseMock: (overrideResponse?: Partial<SignSolanaMessage200>) => SignSolanaMessage200;
export declare const getListSolanaAccountsMockHandler: (overrideResponse?: ListSolanaAccounts200 | ((info: Parameters<Parameters<typeof http.get>[1]>[0]) => Promise<ListSolanaAccounts200> | ListSolanaAccounts200)) => import("msw").HttpHandler;
export declare const getCreateSolanaAccountMockHandler: (overrideResponse?: SolanaAccount | ((info: Parameters<Parameters<typeof http.post>[1]>[0]) => Promise<SolanaAccount> | SolanaAccount)) => import("msw").HttpHandler;
export declare const getGetSolanaAccountMockHandler: (overrideResponse?: SolanaAccount | ((info: Parameters<Parameters<typeof http.get>[1]>[0]) => Promise<SolanaAccount> | SolanaAccount)) => import("msw").HttpHandler;
export declare const getUpdateSolanaAccountMockHandler: (overrideResponse?: SolanaAccount | ((info: Parameters<Parameters<typeof http.put>[1]>[0]) => Promise<SolanaAccount> | SolanaAccount)) => import("msw").HttpHandler;
export declare const getGetSolanaAccountByNameMockHandler: (overrideResponse?: SolanaAccount | ((info: Parameters<Parameters<typeof http.get>[1]>[0]) => Promise<SolanaAccount> | SolanaAccount)) => import("msw").HttpHandler;
export declare const getSignSolanaTransactionMockHandler: (overrideResponse?: SignSolanaTransaction200 | ((info: Parameters<Parameters<typeof http.post>[1]>[0]) => Promise<SignSolanaTransaction200> | SignSolanaTransaction200)) => import("msw").HttpHandler;
export declare const getSignSolanaMessageMockHandler: (overrideResponse?: SignSolanaMessage200 | ((info: Parameters<Parameters<typeof http.post>[1]>[0]) => Promise<SignSolanaMessage200> | SignSolanaMessage200)) => import("msw").HttpHandler;
export declare const getSolanaAccountsMock: () => import("msw").HttpHandler[];
//# sourceMappingURL=solana-accounts.msw.d.ts.map