// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ErrorType = {
    already_exists: "already_exists",
    bad_gateway: "bad_gateway",
    faucet_limit_exceeded: "faucet_limit_exceeded",
    forbidden: "forbidden",
    idempotency_error: "idempotency_error",
    internal_server_error: "internal_server_error",
    invalid_request: "invalid_request",
    invalid_signature: "invalid_signature",
    malformed_transaction: "malformed_transaction",
    not_found: "not_found",
    rate_limit_exceeded: "rate_limit_exceeded",
    request_canceled: "request_canceled",
    service_unavailable: "service_unavailable",
    timed_out: "timed_out",
    unauthorized: "unauthorized",
    policy_violation: "policy_violation",
    policy_in_use: "policy_in_use",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const EvmUserOperationNetwork = {
    "base-sepolia": "base-sepolia",
    base: "base",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const EvmUserOperationStatus = {
    pending: "pending",
    signed: "signed",
    broadcast: "broadcast",
    complete: "complete",
    failed: "failed",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ListEvmTokenBalancesNetwork = {
    base: "base",
    "base-sepolia": "base-sepolia",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const EthValueCriterionType = {
    ethValue: "ethValue",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const EthValueCriterionOperator = {
    ">": ">",
    ">=": ">=",
    "<": "<",
    "<=": "<=",
    "==": "==",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const EvmAddressCriterionType = {
    evmAddress: "evmAddress",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const EvmAddressCriterionOperator = {
    in: "in",
    not_in: "not in",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SolAddressCriterionType = {
    solAddress: "solAddress",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SolAddressCriterionOperator = {
    in: "in",
    not_in: "not in",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const RuleAction = {
    reject: "reject",
    accept: "accept",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const RuleOperation = {
    signEvmTransaction: "signEvmTransaction",
    signSolTransaction: "signSolTransaction",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PolicyScope = {
    project: "project",
    account: "account",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SendEvmTransactionBodyNetwork = {
    base: "base",
    "base-sepolia": "base-sepolia",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PrepareUserOperationBodyNetwork = {
    "base-sepolia": "base-sepolia",
    base: "base",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const RequestEvmFaucetBodyNetwork = {
    "base-sepolia": "base-sepolia",
    "ethereum-sepolia": "ethereum-sepolia",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const RequestEvmFaucetBodyToken = {
    eth: "eth",
    usdc: "usdc",
    eurc: "eurc",
    cbbtc: "cbbtc",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ListPoliciesScope = {
    project: "project",
    account: "account",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const CreatePolicyBodyScope = {
    project: "project",
    account: "account",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const RequestSolanaFaucetBodyToken = {
    sol: "sol",
    usdc: "usdc",
};
//# sourceMappingURL=coinbaseDeveloperPlatformAPIs.schemas.js.map